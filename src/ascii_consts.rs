use std::ops::RangeInclusive;

// 0x00 - 0x1F: control characters
pub const NULL: u8 = 0x00;
pub const SOH: u8 = 0x01;
pub const STX: u8 = 0x02;
pub const ETX: u8 = 0x03;
pub const EOT: u8 = 0x04;
pub const ENQ: u8 = 0x05;
pub const ACK: u8 = 0x06;
pub const BEL: u8 = 0x07;
pub const BS: u8 = 0x08;
pub const HT: u8 = 0x09;
pub const LF: u8 = 0x0A;
pub const VT: u8 = 0x0B;
pub const FF: u8 = 0x0C;
pub const CR: u8 = 0x0D;
pub const SO: u8 = 0x0E;
pub const SI: u8 = 0x0F;
pub const DLE: u8 = 0x10;
pub const DC1: u8 = 0x11;
pub const DC2: u8 = 0x12;
pub const DC3: u8 = 0x13;
pub const DC4: u8 = 0x14;
pub const NAK: u8 = 0x15;
pub const SYN: u8 = 0x16;
pub const ETB: u8 = 0x17;
pub const CAN: u8 = 0x18;
pub const EM: u8 = 0x19;
pub const SUB: u8 = 0x1A;
pub const ESC: u8 = 0x1B;
pub const FS: u8 = 0x1C;
pub const GS: u8 = 0x1D;
pub const RS: u8 = 0x1E;
pub const US: u8 = 0x1F;
// 0x20 - 0x7E: printable ASCII characters
pub const SPACE: u8 = 0x20;
pub const EXCLAMATION_MARK: u8 = 0x21;
pub const QUOTATION_MARK: u8 = 0x22;
pub const NUMBER_SIGN: u8 = 0x23;
pub const DOLLAR_SIGN: u8 = 0x24;
pub const PERCENT_SIGN: u8 = 0x25;
pub const AMPERSAND: u8 = 0x26;
pub const APOSTROPHE: u8 = 0x27;
pub const LEFT_PARENTHESIS: u8 = 0x28;
pub const RIGHT_PARENTHESIS: u8 = 0x29;
pub const ASTERISK: u8 = 0x2A;
pub const PLUS_SIGN: u8 = 0x2B;
pub const COMMA: u8 = 0x2C;
pub const HYPHEN_MINUS: u8 = 0x2D;
pub const FULL_STOP: u8 = 0x2E;
pub const SOLIDUS: u8 = 0x2F;
pub const DIGIT_ZERO: u8 = 0x30;
pub const DIGIT_ONE: u8 = 0x31;
pub const DIGIT_TWO: u8 = 0x32;
pub const DIGIT_THREE: u8 = 0x33;
pub const DIGIT_FOUR: u8 = 0x34;
pub const DIGIT_FIVE: u8 = 0x35;
pub const DIGIT_SIX: u8 = 0x36;
pub const DIGIT_SEVEN: u8 = 0x37;
pub const DIGIT_EIGHT: u8 = 0x38;
pub const DIGIT_NINE: u8 = 0x39;
pub const COLON: u8 = 0x3A;
pub const SEMICOLON: u8 = 0x3B;
pub const LESS_THAN_SIGN: u8 = 0x3C;
pub const EQUALS_SIGN: u8 = 0x3D;
pub const GREATER_THAN_SIGN: u8 = 0x3E;
pub const QUESTION_MARK: u8 = 0x3F;
pub const COMMERCIAL_AT: u8 = 0x40;
pub const LATIN_CAPITAL_LETTER_A: u8 = 0x41;
pub const LATIN_CAPITAL_LETTER_B: u8 = 0x42;
pub const LATIN_CAPITAL_LETTER_C: u8 = 0x43;
pub const LATIN_CAPITAL_LETTER_D: u8 = 0x44;
pub const LATIN_CAPITAL_LETTER_E: u8 = 0x45;
pub const LATIN_CAPITAL_LETTER_F: u8 = 0x46;
pub const LATIN_CAPITAL_LETTER_G: u8 = 0x47;
pub const LATIN_CAPITAL_LETTER_H: u8 = 0x48;
pub const LATIN_CAPITAL_LETTER_I: u8 = 0x49;
pub const LATIN_CAPITAL_LETTER_J: u8 = 0x4A;
pub const LATIN_CAPITAL_LETTER_K: u8 = 0x4B;
pub const LATIN_CAPITAL_LETTER_L: u8 = 0x4C;
pub const LATIN_CAPITAL_LETTER_M: u8 = 0x4D;
pub const LATIN_CAPITAL_LETTER_N: u8 = 0x4E;
pub const LATIN_CAPITAL_LETTER_O: u8 = 0x4F;
pub const LATIN_CAPITAL_LETTER_P: u8 = 0x50;
pub const LATIN_CAPITAL_LETTER_Q: u8 = 0x51;
pub const LATIN_CAPITAL_LETTER_R: u8 = 0x52;
pub const LATIN_CAPITAL_LETTER_S: u8 = 0x53;
pub const LATIN_CAPITAL_LETTER_T: u8 = 0x54;
pub const LATIN_CAPITAL_LETTER_U: u8 = 0x55;
pub const LATIN_CAPITAL_LETTER_V: u8 = 0x56;
pub const LATIN_CAPITAL_LETTER_W: u8 = 0x57;
pub const LATIN_CAPITAL_LETTER_X: u8 = 0x58;
pub const LATIN_CAPITAL_LETTER_Y: u8 = 0x59;
pub const LATIN_CAPITAL_LETTER_Z: u8 = 0x5A;
pub const LEFT_SQUARE_BRACKET: u8 = 0x5B;
pub const REVERSE_SOLIDUS: u8 = 0x5C;
pub const RIGHT_SQUARE_BRACKET: u8 = 0x5D;
pub const CIRCUMFLEX_ACCENT: u8 = 0x5E;
pub const LOW_LINE: u8 = 0x5F;
pub const GRAVE_ACCENT: u8 = 0x60;
pub const LATIN_SMALL_LETTER_A: u8 = 0x61;
pub const LATIN_SMALL_LETTER_B: u8 = 0x62;
pub const LATIN_SMALL_LETTER_C: u8 = 0x63;
pub const LATIN_SMALL_LETTER_D: u8 = 0x64;
pub const LATIN_SMALL_LETTER_E: u8 = 0x65;
pub const LATIN_SMALL_LETTER_F: u8 = 0x66;
pub const LATIN_SMALL_LETTER_G: u8 = 0x67;
pub const LATIN_SMALL_LETTER_H: u8 = 0x68;
pub const LATIN_SMALL_LETTER_I: u8 = 0x69;
pub const LATIN_SMALL_LETTER_J: u8 = 0x6A;
pub const LATIN_SMALL_LETTER_K: u8 = 0x6B;
pub const LATIN_SMALL_LETTER_L: u8 = 0x6C;
pub const LATIN_SMALL_LETTER_M: u8 = 0x6D;
pub const LATIN_SMALL_LETTER_N: u8 = 0x6E;
pub const LATIN_SMALL_LETTER_O: u8 = 0x6F;
pub const LATIN_SMALL_LETTER_P: u8 = 0x70;
pub const LATIN_SMALL_LETTER_Q: u8 = 0x71;
pub const LATIN_SMALL_LETTER_R: u8 = 0x72;
pub const LATIN_SMALL_LETTER_S: u8 = 0x73;
pub const LATIN_SMALL_LETTER_T: u8 = 0x74;
pub const LATIN_SMALL_LETTER_U: u8 = 0x75;
pub const LATIN_SMALL_LETTER_V: u8 = 0x76;
pub const LATIN_SMALL_LETTER_W: u8 = 0x77;
pub const LATIN_SMALL_LETTER_X: u8 = 0x78;
pub const LATIN_SMALL_LETTER_Y: u8 = 0x79;
pub const LATIN_SMALL_LETTER_Z: u8 = 0x7A;
pub const LEFT_CURLY_BRACKET: u8 = 0x7B;
pub const VERTICAL_LINE: u8 = 0x7C;
pub const RIGHT_CURLY_BRACKET: u8 = 0x7D;
pub const TILDE: u8 = 0x7E;
pub const DEL: u8 = 0x7F;
// extended ascii
pub const EXT_128: u8 = 0x80;
pub const EXT_129: u8 = 0x81;
pub const EXT_130: u8 = 0x82;
pub const EXT_131: u8 = 0x83;
pub const EXT_132: u8 = 0x84;
pub const EXT_133: u8 = 0x85;
pub const EXT_134: u8 = 0x86;
pub const EXT_135: u8 = 0x87;
pub const EXT_136: u8 = 0x88;
pub const EXT_137: u8 = 0x89;
pub const EXT_138: u8 = 0x8A;
pub const EXT_139: u8 = 0x8B;
pub const EXT_140: u8 = 0x8C;
pub const EXT_141: u8 = 0x8D;
pub const EXT_142: u8 = 0x8E;
pub const EXT_143: u8 = 0x8F;
pub const EXT_144: u8 = 0x90;
pub const EXT_145: u8 = 0x91;
pub const EXT_146: u8 = 0x92;
pub const EXT_147: u8 = 0x93;
pub const EXT_148: u8 = 0x94;
pub const EXT_149: u8 = 0x95;
pub const EXT_150: u8 = 0x96;
pub const EXT_151: u8 = 0x97;
pub const EXT_152: u8 = 0x98;
pub const EXT_153: u8 = 0x99;
pub const EXT_154: u8 = 0x9A;
pub const EXT_155: u8 = 0x9B;
pub const EXT_156: u8 = 0x9C;
pub const EXT_157: u8 = 0x9D;
pub const EXT_158: u8 = 0x9E;
pub const EXT_159: u8 = 0x9F;

pub const NO_BREAK_SPACE: u8 = 0xA0;
pub const INVERTED_EXCLAMATION_MARK: u8 = 0xA1;
pub const CENT_SIGN: u8 = 0xA2;
pub const POUND_SIGN: u8 = 0xA3;
pub const CURRENCY_SIGN: u8 = 0xA4;
pub const YEN_SIGN: u8 = 0xA5;
pub const BROKEN_BAR: u8 = 0xA6;
pub const SECTION_SIGN: u8 = 0xA7;
pub const DIAERESIS: u8 = 0xA8;
pub const COPYRIGHT_SIGN: u8 = 0xA9;
pub const FEMININE_ORDINAL_INDICATOR: u8 = 0xAA;
pub const LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK: u8 = 0xAB;
pub const NOT_SIGN: u8 = 0xAC;
pub const SHY: u8 = 0xAD;
pub const REGISTERED_SIGN: u8 = 0xAE;
pub const MACRON: u8 = 0xAF;
pub const DEGREE_SIGN: u8 = 0xB0;
pub const PLUS_MINUS_SIGN: u8 = 0xB1;
pub const SUPERSCRIPT_TWO: u8 = 0xB2;
pub const SUPERSCRIPT_THREE: u8 = 0xB3;
pub const ACUTE_ACCENT: u8 = 0xB4;
pub const MICRO_SIGN: u8 = 0xB5;
pub const PILCROW_SIGN: u8 = 0xB6;
pub const MIDDLE_DOT: u8 = 0xB7;
pub const CEDILLA: u8 = 0xB8;
pub const SUPERSCRIPT_ONE: u8 = 0xB9;
pub const MASCULINE_ORDINAL_INDICATOR: u8 = 0xBA;
pub const RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK: u8 = 0xBB;
pub const VULGAR_FRACTION_ONE_QUARTER: u8 = 0xBC;
pub const VULGAR_FRACTION_ONE_HALF: u8 = 0xBD;
pub const VULGAR_FRACTION_THREE_QUARTERS: u8 = 0xBE;
pub const INVERTED_QUESTION_MARK: u8 = 0xBF;
pub const LATIN_CAPITAL_LETTER_A_WITH_GRAVE: u8 = 0xC0;
pub const LATIN_CAPITAL_LETTER_A_WITH_ACUTE: u8 = 0xC1;
pub const LATIN_CAPITAL_LETTER_A_WITH_CIRCUMFLEX: u8 = 0xC2;
pub const LATIN_CAPITAL_LETTER_A_WITH_TILDE: u8 = 0xC3;
pub const LATIN_CAPITAL_LETTER_A_WITH_DIAERESIS: u8 = 0xC4;
pub const LATIN_CAPITAL_LETTER_A_WITH_RING_ABOVE: u8 = 0xC5;
pub const LATIN_CAPITAL_LETTER_AE: u8 = 0xC6;
pub const LATIN_CAPITAL_LETTER_C_WITH_CEDILLA: u8 = 0xC7;
pub const LATIN_CAPITAL_LETTER_E_WITH_GRAVE: u8 = 0xC8;
pub const LATIN_CAPITAL_LETTER_E_WITH_ACUTE: u8 = 0xC9;
pub const LATIN_CAPITAL_LETTER_E_WITH_CIRCUMFLEX: u8 = 0xCA;
pub const LATIN_CAPITAL_LETTER_E_WITH_DIAERESIS: u8 = 0xCB;
pub const LATIN_CAPITAL_LETTER_I_WITH_GRAVE: u8 = 0xCC;
pub const LATIN_CAPITAL_LETTER_I_WITH_ACUTE: u8 = 0xCD;
pub const LATIN_CAPITAL_LETTER_I_WITH_CIRCUMFLEX: u8 = 0xCE;
pub const LATIN_CAPITAL_LETTER_I_WITH_DIAERESIS: u8 = 0xCF;
pub const LATIN_CAPITAL_LETTER_ETH: u8 = 0xD0;
pub const LATIN_CAPITAL_LETTER_N_WITH_TILDE: u8 = 0xD1;
pub const LATIN_CAPITAL_LETTER_O_WITH_GRAVE: u8 = 0xD2;
pub const LATIN_CAPITAL_LETTER_O_WITH_ACUTE: u8 = 0xD3;
pub const LATIN_CAPITAL_LETTER_O_WITH_CIRCUMFLEX: u8 = 0xD4;
pub const LATIN_CAPITAL_LETTER_O_WITH_TILDE: u8 = 0xD5;
pub const LATIN_CAPITAL_LETTER_O_WITH_DIAERESIS: u8 = 0xD6;
pub const MULTIPLICATION_SIGN: u8 = 0xD7;
pub const LATIN_CAPITAL_LETTER_O_WITH_STROKE: u8 = 0xD8;
pub const LATIN_CAPITAL_LETTER_U_WITH_GRAVE: u8 = 0xD9;
pub const LATIN_CAPITAL_LETTER_U_WITH_ACUTE: u8 = 0xDA;
pub const LATIN_CAPITAL_LETTER_U_WITH_CIRCUMFLEX: u8 = 0xDB;
pub const LATIN_CAPITAL_LETTER_U_WITH_DIAERESIS: u8 = 0xDC;
pub const LATIN_CAPITAL_LETTER_Y_WITH_ACUTE: u8 = 0xDD;
pub const LATIN_CAPITAL_LETTER_THORN: u8 = 0xDE;
pub const LATIN_SMALL_LETTER_SHARP_S: u8 = 0xDF;
pub const LATIN_SMALL_LETTER_A_WITH_GRAVE: u8 = 0xE0;
pub const LATIN_SMALL_LETTER_A_WITH_ACUTE: u8 = 0xE1;
pub const LATIN_SMALL_LETTER_A_WITH_CIRCUMFLEX: u8 = 0xE2;
pub const LATIN_SMALL_LETTER_A_WITH_TILDE: u8 = 0xE3;
pub const LATIN_SMALL_LETTER_A_WITH_DIAERESIS: u8 = 0xE4;
pub const LATIN_SMALL_LETTER_A_WITH_RING_ABOVE: u8 = 0xE5;
pub const LATIN_SMALL_LETTER_AE: u8 = 0xE6;
pub const LATIN_SMALL_LETTER_C_WITH_CEDILLA: u8 = 0xE7;
pub const LATIN_SMALL_LETTER_E_WITH_GRAVE: u8 = 0xE8;
pub const LATIN_SMALL_LETTER_E_WITH_ACUTE: u8 = 0xE9;
pub const LATIN_SMALL_LETTER_E_WITH_CIRCUMFLEX: u8 = 0xEA;
pub const LATIN_SMALL_LETTER_E_WITH_DIAERESIS: u8 = 0xEB;
pub const LATIN_SMALL_LETTER_I_WITH_GRAVE: u8 = 0xEC;
pub const LATIN_SMALL_LETTER_I_WITH_ACUTE: u8 = 0xED;
pub const LATIN_SMALL_LETTER_I_WITH_CIRCUMFLEX: u8 = 0xEE;
pub const LATIN_SMALL_LETTER_I_WITH_DIAERESIS: u8 = 0xEF;
pub const LATIN_SMALL_LETTER_ETH: u8 = 0xF0;
pub const LATIN_SMALL_LETTER_N_WITH_TILDE: u8 = 0xF1;
pub const LATIN_SMALL_LETTER_O_WITH_GRAVE: u8 = 0xF2;
pub const LATIN_SMALL_LETTER_O_WITH_ACUTE: u8 = 0xF3;
pub const LATIN_SMALL_LETTER_O_WITH_CIRCUMFLEX: u8 = 0xF4;
pub const LATIN_SMALL_LETTER_O_WITH_TILDE: u8 = 0xF5;
pub const LATIN_SMALL_LETTER_O_WITH_DIAERESIS: u8 = 0xF6;
pub const DIVISION_SIGN: u8 = 0xF7;
pub const LATIN_SMALL_LETTER_O_WITH_STROKE: u8 = 0xF8;
pub const LATIN_SMALL_LETTER_U_WITH_GRAVE: u8 = 0xF9;
pub const LATIN_SMALL_LETTER_U_WITH_ACUTE: u8 = 0xFA;
pub const LATIN_SMALL_LETTER_U_WITH_CIRCUMFLEX: u8 = 0xFB;
pub const LATIN_SMALL_LETTER_U_WITH_DIAERESIS: u8 = 0xFC;
pub const LATIN_SMALL_LETTER_Y_WITH_ACUTE: u8 = 0xFD;
pub const LATIN_SMALL_LETTER_THORN: u8 = 0xFE;
pub const LATIN_SMALL_LETTER_Y_WITH_DIAERESIS: u8 = 0xFF;

// there is some overlap and gaps between some of these. Some ctrl chars are printable, and the ctrl char DEL falls after the printable range.
// Some extended ASCII chars are also printable, but are going to be treated as non-printable for the purposes of this crate.
pub const ASCII_CTRL_RANGE: RangeInclusive<u8> = NULL..=US;
pub const ASCII_CTRL_PRINTABLES: [u8; 3] = [HT, LF, CR];
pub const ASCII_PRINTABLE_RANGE: RangeInclusive<u8> = SPACE..=TILDE;
// DEL is not included in ASCII_PRINTABLE_RANGE
pub const ASCII_EXTENDED_RANGE: RangeInclusive<u8> = EXT_128..=LATIN_SMALL_LETTER_Y_WITH_DIAERESIS;
